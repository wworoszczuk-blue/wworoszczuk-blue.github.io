<div
  class="aspect-square rounded-xl flex items-center justify-center overflow-hidden relative border border-white/10"
>
  <div class="relative w-full h-full" id="talent-ai-container">
    <!-- MAIN CIRCLE -->
    <div class="absolute inset-0 flex items-center justify-center">
      <div class="fairness-circle">
        <div class="circle-ring"></div>
        <div class="circle-core"></div>
        <div class="equal-opportunity">
          <div class="opportunity-dot" style="--angle: 0deg"></div>
          <div class="opportunity-dot" style="--angle: 72deg"></div>
          <div class="opportunity-dot" style="--angle: 144deg"></div>
          <div class="opportunity-dot" style="--angle: 216deg"></div>
          <div class="opportunity-dot" style="--angle: 288deg"></div>
        </div>
      </div>
    </div>

    <!-- UPCOMING CANDIDATES -->
    <div class="absolute left-6 top-1/2 transform -translate-y-1/2">
      <div class="candidates-input">
        <div class="candidate-avatar" style="--delay: 0ms"></div>
        <div class="candidate-avatar" style="--delay: 800ms"></div>
        <div class="candidate-avatar" style="--delay: 1600ms"></div>
        <div class="input-label">Candidates</div>
      </div>
    </div>

    <!-- OUTPUT - PERSONALIZED FEEDBACK  -->
    <div class="absolute right-6 top-1/2 transform -translate-y-1/2">
      <div class="results-output">
        <div class="feedback-bubble" style="--delay: 0ms">
          <div class="feedback-text">Skills</div>
        </div>
        <div class="feedback-bubble" style="--delay: 400ms">
          <div class="feedback-text">Potential</div>
        </div>
        <div class="feedback-bubble" style="--delay: 800ms">
          <div class="feedback-text">Fit</div>
        </div>
        <div class="output-label">Personalized Feedback</div>
      </div>
    </div>

    <!-- GAMIFICATION ELEMENTS -->
    <div class="absolute top-6 left-1/2 transform -translate-x-1/2">
      <div class="gamification-elements">
        <div class="game-badge" data-completed="true">
          <div class="badge-icon">üéÆ</div>
        </div>
        <div class="game-badge" data-completed="false">
          <div class="badge-icon">üèÜ</div>
        </div>
        <div class="game-badge" data-completed="false">
          <div class="badge-icon">‚≠ê</div>
        </div>
      </div>
    </div>

    <!-- SKILLS -->
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2">
      <div class="skills-progress">
        <div class="skill-track">
          <div class="skill-progress" data-skill="communication"></div>
          <div class="skill-label">Communication</div>
        </div>
        <div class="skill-track">
          <div class="skill-progress" data-skill="problem-solving"></div>
          <div class="skill-label">Problem Solving</div>
        </div>
        <div class="skill-track">
          <div class="skill-progress" data-skill="teamwork"></div>
          <div class="skill-label">Teamwork</div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .fairness-circle {
    position: relative;
    width: 180px;
    height: 180px;
  }

  .circle-ring {
    position: absolute;
    inset: 0;
    border: 2px solid #3a7bd563;
    border-radius: 50%;
    animation: ring-rotate 20s linear infinite;
  }

  .circle-core {
    position: absolute;
    inset: 20px;
    border: 1px solid #3a7bd52d;
    border-radius: 50%;
    background: #3a7bd539;
    box-shadow:
      inset 0 0 30px rgba(99, 201, 121, 0.1),
      0 0 40px rgba(99, 201, 121, 0.1);
  }

  .equal-opportunity {
    position: absolute;
    inset: 0;
  }

  .opportunity-dot {
    position: absolute;
    width: 8px;
    height: 8px;
    background: #3a7bd5;
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(var(--angle)) translateX(70px)
      rotate(calc(-1 * var(--angle)));
    animation: dot-orbit 8s linear infinite;
    box-shadow: 0 0 12px rgba(99, 201, 121, 0.8);
  }

  .candidates-input {
    position: relative;
    text-align: center;
  }

  .candidate-avatar {
    width: 24px;
    height: 24px;
    background: #3a7bd5;
    border-radius: 50%;
    margin-bottom: 8px;
    opacity: 0;
    animation: candidate-enter 2.4s ease-in infinite;
    animation-delay: var(--delay);
    box-shadow: 0 0 15px #3a7bd548;
  }

  .results-output {
    position: relative;
    text-align: center;
  }

  .feedback-bubble {
    width: 50px;
    height: 24px;
    background: #3a7bd529;
    border: 1px solid #3a7bd563;
    border-radius: 12px;
    margin-bottom: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    animation: feedback-appear 2.4s ease-out infinite;
    animation-delay: var(--delay);
  }

  .feedback-text {
    font-size: 9px;
    font-family: "Space Grotesk", sans-serif;
    font-weight: 600;
    color: #63c979;
    letter-spacing: 0.5px;
  }

  .gamification-elements {
    display: flex;
    gap: 12px;
  }

  .game-badge {
    width: 32px;
    height: 32px;
    border-radius: 8px;
    background: #3a7bd52f;
    border: 1px solid #3a7bd563;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    transition: all 0.3s ease;
  }

  .game-badge[data-completed="true"] {
    background: #3a7bd523;
    border-color: #3a7bd5;
    box-shadow: 0 0 15px #3a7bd532;
  }

  .badge-icon {
    font-size: 14px;
    filter: grayscale(0.3);
    transition: all 0.3s ease;
  }

  .game-badge[data-completed="true"] .badge-icon {
    filter: grayscale(0);
    transform: scale(1.1);
  }

  .skills-progress {
    display: flex;
    gap: 16px;
  }

  .skill-track {
    text-align: center;
    width: 60px;
  }

  .skill-progress {
    width: 100%;
    height: 4px;
    background: #3a7bd55d;
    border-radius: 2px;
    margin-bottom: 4px;
    overflow: hidden;
    position: relative;
  }

  .skill-progress::after {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: #3a7bd5;
    border-radius: 2px;
    animation: skill-fill 3s ease-in-out infinite;
  }

  .skill-progress[data-skill="communication"]::after {
    animation-delay: 0s;
  }

  .skill-progress[data-skill="problem-solving"]::after {
    animation-delay: 1s;
  }

  .skill-progress[data-skill="teamwork"]::after {
    animation-delay: 2s;
  }

  .skill-label {
    font-size: 8px;
    font-family: "Space Grotesk", sans-serif;
    color: rgba(99, 201, 121, 0.7);
    font-weight: 500;
  }

  .input-label,
  .output-label {
    font-size: 10px;
    font-family: "Space Grotesk", sans-serif;
    color: #63c979;
    margin-top: 8px;
    opacity: 0.7;
    font-weight: 500;
  }

  @keyframes ring-rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes dot-orbit {
    from {
      transform: translate(-50%, -50%) rotate(var(--angle)) translateX(70px)
        rotate(calc(-1 * var(--angle)));
    }
    to {
      transform: translate(-50%, -50%) rotate(calc(var(--angle) + 360deg))
        translateX(70px) rotate(calc(-1 * var(--angle) - 360deg));
    }
  }

  @keyframes candidate-enter {
    0% {
      opacity: 0;
      transform: translateX(-20px);
    }
    20% {
      opacity: 1;
      transform: translateX(0);
    }
    80% {
      opacity: 1;
      transform: translateX(0);
    }
    100% {
      opacity: 0;
      transform: translateX(20px);
    }
  }

  @keyframes feedback-appear {
    0%,
    60% {
      opacity: 0;
      transform: scale(0.8);
    }
    70%,
    90% {
      opacity: 1;
      transform: scale(1);
    }
    100% {
      opacity: 0;
      transform: scale(0.8);
    }
  }

  @keyframes skill-fill {
    0%,
    100% {
      left: -100%;
    }
    50% {
      left: 0;
    }
  }

  .game-badge {
    cursor: pointer;
  }

  .game-badge:hover {
    transform: scale(1.1);
    box-shadow: 0 0 20px #3a7bd55d;
  }
</style>

<script>
  // TALENT AI VISUALIZATION
  (function () {
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", initTalentAI);
    } else {
      setTimeout(initTalentAI, 100);
    }

    function initTalentAI() {
      const container = document.getElementById("talent-ai-container");
      if (!container) return;

      const badges = container.querySelectorAll(".game-badge");
      let currentBadge = 0; // Track which badge should be highlighted next in the rotation

      function rotateBadges() {
        badges.forEach((badge) =>
          badge.setAttribute("data-completed", "false")
        );

        if (currentBadge < badges.length) {
          badges[currentBadge].setAttribute("data-completed", "true");
          currentBadge++;
        } else {
          // loop back to the beginning
          currentBadge = 0;
          badges[0].setAttribute("data-completed", "true");
        }
      }

      setTimeout(() => {
        setInterval(rotateBadges, 2000);
      }, 1000);

      badges.forEach((badge, index) => {
        badge.addEventListener("click", () => {
          badges.forEach((b) => b.setAttribute("data-completed", "false"));
          badge.setAttribute("data-completed", "true");
          currentBadge = index;
        });
      });
    }
  })();
</script>
