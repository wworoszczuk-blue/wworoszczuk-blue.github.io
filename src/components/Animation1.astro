---
---

<div class="aspect-square bg-elivion-bg rounded-xl flex items-center justify-center overflow-hidden relative border border-elivion-green/10">
  <!-- Tło z siatką -->
  <div class="absolute inset-0 opacity-10">
    <div class="w-full h-full" style="
      background-image: 
        linear-gradient(rgba(99, 201, 121, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(99, 201, 121, 0.1) 1px, transparent 1px);
      background-size: 40px 40px;
    "></div>
  </div>

  <div class="relative w-full h-full" id="leadership-growth-chart">
    
    <!-- Wykres liniowy -->
    <div class="absolute inset-8">
      <!-- Linia trendu -->
      <svg class="absolute inset-0 w-full h-full" viewBox="0 0 100 100">
        <defs>
          <linearGradient id="growthGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" stop-color="#63C979" stop-opacity="0.2" />
            <stop offset="100%" stop-color="#63C979" stop-opacity="0.05" />
          </linearGradient>
        </defs>
        
        <!-- Wypełnienie obszaru -->
        <path 
          id="growth-area" 
          d="M 15,75 L 30,58 L 45,42 L 60,32 L 75,26 L 90,22 L 90,100 L 15,100 Z" 
          fill="url(#growthGradient)"
          class="chart-element"
        />
        
        <!-- Główna linia trendu -->
        <path 
          id="growth-line" 
          d="M 15,75 L 30,58 L 45,42 L 60,32 L 75,26 L 90,22" 
          fill="none" 
          stroke="#63C979" 
          stroke-width="2"
          stroke-linecap="round"
          class="chart-element"
        />
      </svg>

      <!-- Punkty progresu -->
      <div class="progress-marker" style="left: 15%; top: 75%">
        <div class="marker-dot"></div>
        <div class="marker-pulse"></div>
      </div>
      <div class="progress-marker" style="left: 30%; top: 58%">
        <div class="marker-dot"></div>
        <div class="marker-pulse"></div>
      </div>
      <div class="progress-marker" style="left: 45%; top: 42%">
        <div class="marker-dot"></div>
        <div class="marker-pulse"></div>
      </div>
      <div class="progress-marker" style="left: 60%; top: 32%">
        <div class="marker-dot"></div>
        <div class="marker-pulse"></div>
      </div>
      <div class="progress-marker" style="left: 75%; top: 26%">
        <div class="marker-dot"></div>
        <div class="marker-pulse"></div>
      </div>
      <div class="progress-marker" style="left: 90%; top: 22%">
        <div class="marker-dot"></div>
        <div class="marker-pulse"></div>
      </div>

      <!-- Poruszająca się kropka progresu -->
      <div class="growth-indicator" id="growth-indicator">
        <div class="indicator-core"></div>
        <div class="indicator-glow"></div>
      </div>
    </div>

    <!-- Managerzy wchodzący do systemu -->
    <div class="absolute left-4 top-1/2 transform -translate-y-1/2">
      <div class="managers-flow">
        <div class="manager-dot" style="--delay: 0ms"></div>
        <div class="manager-dot" style="--delay: 600ms"></div>
        <div class="manager-dot" style="--delay: 1200ms"></div>
        <div class="flow-label">Managers</div>
      </div>
    </div>

    <!-- Wyniki rozwoju -->
    <div class="absolute right-4 top-1/2 transform -translate-y-1/2">
      <div class="results-display">
        <div class="growth-value">+78%</div>
        <div class="growth-label">Growth</div>
      </div>
      <div class="flow-label">Impact</div>
    </div>

    <!-- Metryki w czasie rzeczywistym -->
    <div class="absolute top-6 left-1/2 transform -translate-x-1/2">
      <div class="metrics-panel">
        <div class="metric-badge">
          <div class="metric-number">2.8k</div>
          <div class="metric-text">Active</div>
        </div>
        <div class="metric-badge">
          <div class="metric-number">94%</div>
          <div class="metric-text">Engaged</div>
        </div>
      </div>
    </div>

    <!-- Poziomy kompetencji -->
    <div class="absolute bottom-6 left-1/2 transform -translate-x-1/2">
      <div class="competency-levels">
        <div class="level-track">
          <div class="level-progress" data-level="strategic"></div>
          <div class="level-label">Strategic</div>
        </div>
        <div class="level-track">
          <div class="level-progress" data-level="operational"></div>
          <div class="level-label">Operational</div>
        </div>
        <div class="level-track">
          <div class="level-progress" data-level="interpersonal"></div>
          <div class="level-label">Interpersonal</div>
        </div>
      </div>
    </div>

  </div>
</div>

<style>
  /* Markery progresu */
  .progress-marker {
    position: absolute;
    transform: translate(-50%, -50%);
  }

  .marker-dot {
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background: #3A7BD5;
    border: 2px solid #020205;
    box-shadow: 0 0 0 1px #3A7BD5;
    position: relative;
    z-index: 2;
  }

  .marker-pulse {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: rgba(99, 201, 121, 0.3);
    animation: marker-pulse 3s ease-in-out infinite;
    opacity: 0;
  }

  /* Wskaźnik wzrostu */
  .growth-indicator {
    position: absolute;
    transform: translate(-50%, -50%);
    transition: all 0.1s linear;
  }

  .indicator-core {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #3A7BD5;
    border: 2px solid #020205;
    box-shadow: 
      0 0 0 2px #3A7BD5,
      0 0 15px rgba(58, 123, 213, 0.6);
    position: relative;
    z-index: 3;
  }

  .indicator-glow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: rgba(58, 123, 213, 0.3);
    animation: indicator-glow 2s ease-in-out infinite;
  }

  /* Przepływ managerów */
  .managers-flow {
    position: relative;
    text-align: center;
  }

  .manager-dot {
    width: 20px;
    height: 20px;
    background: #3A7BD5;
    border-radius: 50%;
    margin-bottom: 6px;
    opacity: 0;
    animation: manager-flow 2.4s ease-in infinite;
    animation-delay: var(--delay);
    box-shadow: 0 0 12px rgba(99, 201, 121, 0.4);
  }

  /* Wyświetlacz wyników */
  .results-display {
    text-align: center;
    padding: 10px 8px;
    background: rgba(99, 201, 121, 0.08);
    border: 1px solid rgba(99, 201, 121, 0.2);
    border-radius: 6px;
    min-width: 65px;
  }

  .growth-value {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 16px;
    font-weight: 700;
    color: #63C979;
    line-height: 1;
    text-shadow: 0 0 15px rgba(99, 201, 121, 0.3);
  }

  .growth-label {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 9px;
    color: rgba(99, 201, 121, 0.7);
    margin-top: 2px;
    letter-spacing: 0.5px;
  }

  .flow-label {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 10px;
    color: #63C979;
    margin-top: 6px;
    opacity: 0.6;
    font-weight: 500;
  }

  /* Panel metryk */
  .metrics-panel {
    display: flex;
    gap: 16px;
  }

  .metric-badge {
    text-align: center;
    padding: 6px 10px;
    background: rgba(99, 201, 121, 0.05);
    border: 1px solid rgba(99, 201, 121, 0.15);
    border-radius: 6px;
  }

  .metric-number {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 12px;
    font-weight: 600;
    color: #63C979;
    line-height: 1;
  }

  .metric-text {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 8px;
    color: rgba(99, 201, 121, 0.6);
    margin-top: 1px;
  }

  /* Poziomy kompetencji */
  .competency-levels {
    display: flex;
    gap: 20px;
  }

  .level-track {
    text-align: center;
    width: 50px;
  }

  .level-progress {
    width: 100%;
    height: 3px;
    background: rgba(99, 201, 121, 0.15);
    border-radius: 2px;
    margin-bottom: 4px;
    overflow: hidden;
    position: relative;
  }

  .level-progress::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: #63C979;
    border-radius: 2px;
    animation: level-fill 4s ease-in-out infinite;
  }

  .level-progress[data-level="strategic"]::after {
    animation-delay: 0s;
  }

  .level-progress[data-level="operational"]::after {
    animation-delay: 1.3s;
  }

  .level-progress[data-level="interpersonal"]::after {
    animation-delay: 2.6s;
  }

  .level-label {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 8px;
    color: rgba(99, 201, 121, 0.6);
    font-weight: 500;
  }

  /* Animacje */
  @keyframes marker-pulse {
    0%, 100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0;
    }
    50% {
      transform: translate(-50%, -50%) scale(2);
      opacity: 0.4;
    }
  }

  @keyframes indicator-glow {
    0%, 100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.2;
    }
    50% {
      transform: translate(-50%, -50%) scale(1.6);
      opacity: 0.1;
    }
  }

  @keyframes manager-flow {
    0% {
      opacity: 0;
      transform: translateX(-15px);
    }
    20% {
      opacity: 1;
      transform: translateX(0);
    }
    80% {
      opacity: 1;
      transform: translateX(0);
    }
    100% {
      opacity: 0;
      transform: translateX(15px);
    }
  }

  @keyframes level-fill {
    0%, 100% {
      left: -100%;
    }
    50% {
      left: 0;
    }
  }

  @keyframes draw-line {
    to {
      stroke-dashoffset: 0;
    }
  }

  /* Animacje wykresu */
  .chart-element {
    opacity: 0;
    animation: fade-in 1s ease-out forwards;
  }

  #growth-line {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
    animation: draw-line 2.5s ease-out 0.5s forwards;
  }

  #growth-area {
    animation-delay: 0.8s;
  }

  .progress-marker {
    opacity: 0;
    animation: fade-in 0.6s ease-out forwards;
  }

  .progress-marker:nth-child(1) { animation-delay: 1.2s; }
  .progress-marker:nth-child(2) { animation-delay: 1.4s; }
  .progress-marker:nth-child(3) { animation-delay: 1.6s; }
  .progress-marker:nth-child(4) { animation-delay: 1.8s; }
  .progress-marker:nth-child(5) { animation-delay: 2.0s; }
  .progress-marker:nth-child(6) { animation-delay: 2.2s; }

  @keyframes fade-in {
    to {
      opacity: 1;
    }
  }
</style>

<script>
  (function() {
    const container = document.getElementById('leadership-growth-chart');
    if (!container) return;

    const growthIndicator = document.getElementById('growth-indicator');
    const growthValue = container.querySelector('.growth-value');
    const metricNumbers = container.querySelectorAll('.metric-number');

    const growthPath = [
      { x: 15, y: 75 },
      { x: 30, y: 58 },
      { x: 45, y: 42 },
      { x: 60, y: 32 },
      { x: 75, y: 26 },
      { x: 90, y: 22 }
    ];

    const growthValues = [0, 25, 42, 58, 72, 78];
    let currentPoint = 0;

    function startGrowthAnimation() {
      function animateGrowth() {
        if (currentPoint < growthPath.length) {
          const point = growthPath[currentPoint];
          const value = growthValues[currentPoint];
          
          // Przesuń wskaźnik
          growthIndicator.style.left = `${point.x}%`;
          growthIndicator.style.top = `${point.y}%`;

          // Aktualizuj wartość wzrostu
          if (growthValue && value > 0) {
            growthValue.textContent = `+${value}%`;
          }

          currentPoint++;
          setTimeout(animateGrowth, 800);
        } else {
          // Zresetuj i rozpocznij od nowa
          setTimeout(() => {
            currentPoint = 0;
            setTimeout(animateGrowth, 1000);
          }, 2000);
        }
      }

      // Start animacji po załadowaniu
      setTimeout(animateGrowth, 3000);
    }

    // Automatyczna aktualizacja metryk
    function updateMetrics() {
      metricNumbers.forEach(metric => {
        const current = metric.textContent;
        if (current.includes('k')) {
          const num = 2.7 + Math.random() * 0.3;
          metric.textContent = `${num.toFixed(1)}k`;
        } else if (current.includes('%')) {
          const num = 92 + Math.floor(Math.random() * 4);
          metric.textContent = `${num}%`;
        }
      });
    }

    // Inicjalizacja
    setTimeout(() => {
      startGrowthAnimation();
      setInterval(updateMetrics, 4000);
    }, 1000);
  })();
</script>